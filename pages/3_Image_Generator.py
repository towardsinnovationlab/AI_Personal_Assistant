import openai
import streamlit as st


# Sidebar for model selection
with st.sidebar:
    option = st.selectbox(
        'Please select your model',
        ('DALLE3',))
    st.write('You selected:', option)

    # API Key input
    api_key = st.text_input("Please Copy & Paste your API_KEY", key="chatbot_api_key", type="password")

    # Reset button
    if st.button('Reset Conversation'):
        st.session_state["messages"] = []
        st.info("Please change your API_KEY if you change model.")

# Title and caption
st.title("ðŸ’¬ AI Chatbot")
st.caption("ðŸš€ Your Personal AI Assistant powered by Streamlit and text-to-image generation models")

# Initialize messages if not present in session state
if 'messages' not in st.session_state:
    st.session_state["messages"] = [{"role": "assistant", "content": "How can I help you?"}]

# Display messages
for msg in st.session_state.messages:
    st.chat_message(msg["role"]).write(msg["content"])

# Chat input
if prompt := st.text_input("Your message"):
    if not api_key:
        st.info("Please add your API_KEY to go ahead.")
        st.stop()

    # Append user message to session state
    st.session_state.messages.append({"role": "user", "content": prompt})
    st.write(f"User: {prompt}")

    # Client initialization and request for image generation
    if option == 'DALLE3':
        openai.api_key = api_key
        try:
            response = openai.Image.create(
                model="dall-e",
                prompt=prompt,
                n=1,
                size="1024x1024"
            )
            image_url = response['data'][0]['url']
        except Exception as e:
            st.error(f"Error generating image: {e}")
            st.stop()

        # Update session state and display image
        st.session_state.messages.append({"role": "assistant", "content": image_url})
        st.image(image_url, caption="Generated by DALL-E 3", use_column_width=True)
    else:
        st.error("Selected model is not supported.")
        st.stop()

# Display the assistantâ€™s messages
for msg in st.session_state.messages:
    if msg["role"] == "assistant":
        if msg["content"].startswith("http"):
            st.image(msg["content"], caption="Generated by DALL-E 3", use_column_width=True)
        else:
            st.write(f"Assistant: {msg['content']}")